{"version":3,"sources":["functions/functions.js","hooks/useFetch.js","components/Chart.js","buttons/Percent.js","buttons/Price.js","buttons/Time.js","components/Buttons.js","components/Info.js","App.js","index.js"],"names":["getData","url","a","axios","get","headers","response","useFetch","intVal","useState","setResponse","error","setError","useEffect","then","data","catch","LineChart","width","height","gradient","timeX","priceY","axes","push","moment","format","parseFloat","labels","datasets","label","fill","backgroundColor","context","chart","ctx","chartArea","chartWidth","right","left","chartHeight","bottom","top","createLinearGradient","addColorStop","getGradient","borderColor","pointBackgroundColor","pointBorderColor","pointStyle","pointRadius","pointBorderWidth","borderWidth","className","id","options","scales","y","beginAtZero","grid","borderDash","ticks","color","x","align","plugins","legend","display","usePointStyle","Percent","parseInt","priceChangePercent","Price","dollarUSLocale","Intl","NumberFormat","price","Time","serverTime","Buttons","Info","filterTerm","setFilterTerm","res","onSubmit","e","preventDefault","filter","toString","indexOf","onChange","target","value","type","classname","map","filtered","index","qty","quoteQty","time","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfb58c2d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getData = async (url) => {\r\n  const response = await axios.get(url, {\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  });\r\n  return response;\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getData } from \"../functions/functions\";\r\n\r\nexport const useFetch = (url, intVal) => {\r\n  const [response, setResponse] = useState(intVal);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getData(url)\r\n      .then((response) => {\r\n        setResponse(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n      });\r\n  }, [url]);\r\n\r\n  return { response, error };\r\n};\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\nimport moment from \"moment\";\r\n\r\nconst LineChart = () => {\r\n  let timeX = [];\r\n  let priceY = [];\r\n  let width, height, gradient;\r\n  function getGradient(ctx, chartArea) {\r\n    const chartWidth = chartArea.right - chartArea.left;\r\n    const chartHeight = chartArea.bottom - chartArea.top;\r\n    if (gradient === null || width !== chartWidth || height !== chartHeight) {\r\n      width = chartWidth;\r\n      height = chartHeight;\r\n      gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\r\n      gradient.addColorStop(0, \"rgba(140,84,255,0.001)\");\r\n      gradient.addColorStop(1, \"rgba(140,84,255,0.1)\");\r\n    }\r\n\r\n  return gradient;\r\n}\r\n  const { response } = useFetch(\r\n    `https://api.binance.com/api/v3/klines?interval=1w&symbol=BTCUSDT&limit=14`\r\n  );\r\n  if (response) {\r\n    for (const axes of response) {\r\n      timeX.push(moment(axes[0]).format(\"MMM D\"));\r\n      priceY.push(parseFloat(axes[1]));\r\n    }\r\n  }\r\n  const data = {\r\n    labels: timeX,\r\n    datasets: [\r\n      {\r\n        label: \"Price\",\r\n        data: priceY,\r\n        fill: true,\r\n        backgroundColor: function(context) {\r\n          const chart = context.chart;\r\n          const {ctx, chartArea} = chart;\r\n  \r\n          if (!chartArea) {\r\n            return null;\r\n          }\r\n          return getGradient(ctx, chartArea);\r\n        },\r\n        borderColor: \"#8C54FF\",\r\n        pointBackgroundColor: \"white\",\r\n        pointBorderColor: \"#8C54FF\",\r\n        pointStyle: \"circle\",\r\n        pointRadius: 4,\r\n        pointBorderWidth: 2,\r\n        borderWidth:2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        grid: {\r\n          borderDash: [2, 2],\r\n          borderColor: \"#E0E7FF\",\r\n        },\r\n        ticks: {\r\n          color: \"#B0BAC9\",\r\n        },\r\n      },\r\n      x: {\r\n        grid: {\r\n          borderDash: [2, 2],\r\n          borderColor: \"#E0E7FF\",\r\n        },\r\n        ticks: {\r\n          align: \"end\",\r\n          color: \"#B0BAC9\",\r\n        },\r\n      },\r\n    },\r\n\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n        labels: {\r\n          usePointStyle: true,\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <div className=\"chart_container\">\r\n        <Line\r\n          id=\"mychart\"\r\n          width=\"1032.69\"\r\n          height=\"274.24\"\r\n          data={data}\r\n          options={options}\r\n        />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import { useFetch } from \"../hooks/useFetch\";\r\n\r\nconst Percent = () => {\r\n    const { response, error } = useFetch(\r\n        `https://api.binance.com/api/v3/ticker/24hr?symbol=BTCUSDT`\r\n      );\r\n      return (\r\n        <div className=\"percent_button_container\">\r\n          {error ? (\r\n            <h2>error...</h2>\r\n          ) : (\r\n            <div className=\"percent_button\">\r\n                <p className='buttons_value'>%{parseInt(response?.priceChangePercent)}</p>\r\n                <br />\r\n                <p className='buttons_name'>Price Change Percent</p>\r\n            </div>\r\n            )\r\n          }\r\n        </div>\r\n      );\r\n    };\r\n    \r\n\r\nexport default Percent;\r\n","import { useFetch } from \"../hooks/useFetch\";\r\n\r\nconst Price = () => {\r\n    const { response, error } = useFetch(\r\n        `https://api.binance.com/api/v3/avgPrice?symbol=BTCUSDT`\r\n      );\r\n      let dollarUSLocale = Intl.NumberFormat('en-US')\r\n      return (\r\n        <div className=\"price_button_container\">\r\n          {error ? (\r\n            <h2>error...</h2>\r\n          ) : (\r\n            <div className=\"price_button\">\r\n                <p className='buttons_value'>{dollarUSLocale.format(parseInt(response?.price))}</p>\r\n                <br />\r\n                <p className='buttons_name'>Current Average Price</p>\r\n            </div>\r\n            )\r\n          }\r\n        </div>\r\n      );\r\n    };\r\n    \r\n\r\nexport default Price;\r\n","import moment from \"moment\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\n\r\nconst Time = () => {\r\n  const { response, error } = useFetch(`https://api.binance.com/api/v3/time`);\r\n  return (\r\n    <div className=\"time_button_container\">\r\n      {error ? (\r\n        <h2>error...</h2>\r\n      ) : (\r\n        <div className=\"time_button\">\r\n          <p className='buttons_value'>{moment(response?.serverTime).format(\"HH:mm:ss\")}</p>\r\n          <br />\r\n          <p className='buttons_name'>Check Server Time</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Time;\r\n","import React from \"react\";\r\nimport Percent from \"../buttons/Percent\";\r\nimport Price from \"../buttons/Price\";\r\nimport Time from \"../buttons/Time\";\r\n\r\nconst Buttons = () => {\r\n  return (\r\n    <div>\r\n      <div className='dashboard'>\r\n        <p>Dashboard</p>\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <Price />\r\n        <Percent />\r\n        <Time />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { getData } from \"../functions/functions\";\r\n\r\nconst Info = () => {\r\n  const [filterTerm, setFilterTerm] = useState(\"\");\r\n  const [response, setResponse] = useState([]);\r\n  const [error, setError] = useState(false);\r\n\r\n  let url = \"https://api.binance.com/api/v3/trades?symbol=BTCUSDT&limit=8\";\r\n\r\n  useEffect(() => {\r\n    getData(url)\r\n      .then((res) => {\r\n        setResponse(res.data);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n      });\r\n  }, [url]);\r\n\r\n  function handleSearch(e) {\r\n    e.preventDefault();\r\n    if (filterTerm === \"\") {\r\n      getData(url).then((res) => {\r\n        setResponse(res.data);\r\n      });\r\n    } else\r\n      setResponse(\r\n        response?.filter(\r\n          (response) => response.id.toString().indexOf(filterTerm) > -1\r\n        )\r\n      );\r\n    setFilterTerm(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {error ? (\r\n        <h2>There has been same error...</h2>\r\n      ) : (\r\n        <div className=\"info_table\">\r\n          <div className=\"filterContainer\">\r\n            <h2 className=\"info_head\">Recent Trades List</h2>\r\n\r\n            <form className=\"filter_area\" onSubmit={handleSearch}>\r\n              <input\r\n                onChange={(e) => setFilterTerm(e.target.value)}\r\n                type=\"text\"\r\n                value={filterTerm}\r\n                className=\"filter_input\"\r\n              />\r\n              <button type=\"submit\" className=\"filter_button\">\r\n                <p>Filter</p>\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div classname=\"table\">\r\n            <table id=\"mytable\">\r\n              <tr className=\"tablehead\">\r\n                <td>ID</td>\r\n                <td>PRICE</td>\r\n                <td>QTY</td>\r\n                <td>QUOTEQTY</td>\r\n                <td>TIME</td>\r\n              </tr>\r\n\r\n              {response?.map((filtered, index) => (\r\n                <tr key={index} className=\"data_rows\">\r\n                  <td className=\"id_data\">#{filtered.id}</td>\r\n                  <td>{parseInt(filtered.price)} $</td>\r\n                  <td>{filtered.qty}</td>\r\n                  <td>{filtered.quoteQty}</td>\r\n                  <td>{moment(filtered.time).format(\"YYYY-MM-DD HH:mm:ss\")}</td>\r\n                </tr>\r\n              ))}\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","import \"./App.css\";\nimport LineChart from \"./components/Chart\";\nimport Buttons from \"./components/Buttons\";\nimport Info from \"./components/Info\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Buttons/>\n      <LineChart />\n      <Info/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}