{"version":3,"sources":["functions/functions.js","hooks/useFetch.js","components/Chart.js","buttons/Percent.js","buttons/Price.js","buttons/Time.js","components/Buttons.js","components/Info.js","App.js","index.js"],"names":["getData","url","a","axios","get","headers","response","useFetch","intVal","useState","setResponse","error","setError","useEffect","then","data","catch","LineChart","timeX","priceY","axes","push","moment","format","parseFloat","labels","datasets","label","fill","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointStyle","pointRadius","pointBorderWidth","className","options","scales","y","grid","borderDash","x","ticks","align","plugins","legend","display","usePointStyle","Percent","parseInt","priceChangePercent","Price","dollarUSLocale","Intl","NumberFormat","price","Time","serverTime","Buttons","Info","filterTerm","setFilterTerm","res","onSubmit","e","preventDefault","filter","id","toString","indexOf","onChange","target","value","type","map","filtered","index","qty","quoteQty","time","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b436c03e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getData = async (url) => {\r\n  const response = await axios.get(url, {\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  });\r\n  return response;\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getData } from \"../functions/functions\";\r\n\r\nexport const useFetch = (url, intVal) => {\r\n  const [response, setResponse] = useState(intVal);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getData(url)\r\n      .then((response) => {\r\n        setResponse(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n      });\r\n  }, [url]);\r\n\r\n  return { response, error };\r\n};\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\nimport moment from \"moment\";\r\n\r\nconst LineChart = () => {\r\n  let timeX = [];\r\n  let priceY = [];\r\n\r\n  const { response } = useFetch(\r\n    `https://api.binance.com/api/v3/klines?interval=1w&symbol=BTCUSDT&limit=14`\r\n  );\r\n  if (response) {\r\n    for (const axes of response) {\r\n      timeX.push( moment(axes[0]).format(\"MMM D\"));\r\n      priceY.push(parseFloat(axes[1]));\r\n    }\r\n  }\r\n  const data = {\r\n    labels:timeX,\r\n    datasets: [\r\n      {\r\n        label: \"Price\",\r\n        data: priceY,\r\n        fill: true,\r\n        backgroundColor: \"rgba(141,86,255,0.1)\",\r\n        borderColor: \"#935EFF\",\r\n        pointBackgroundColor: \"white\",\r\n        pointBorderColor: \"#935EFF\",\r\n        pointStyle: \"circle\",\r\n        pointRadius: 5,\r\n        pointBorderWidth: 3,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      y: {\r\n        // beginAtZero: true,\r\n        grid: {\r\n          borderDash: [2, 2],\r\n          borderColor: \"#B0BAC9\",\r\n        },\r\n      },\r\n      x: {\r\n        grid: {\r\n          borderDash: [2, 2],\r\n          borderColor: \"#B0BAC9\",\r\n        },\r\n        ticks: {\r\n          align: \"end\",\r\n        },\r\n      },\r\n    },\r\n\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n        labels: {\r\n          usePointStyle: true,\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <div className='chart_container'>\r\n      <Line className=\"chart\" data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import { useFetch } from \"../hooks/useFetch\";\r\n\r\nconst Percent = () => {\r\n    const { response, error } = useFetch(\r\n        `https://api.binance.com/api/v3/ticker/24hr?symbol=BTCUSDT`\r\n      );\r\n      return (\r\n        <div className=\"percent_button\">\r\n          {error ? (\r\n            <h2>error...</h2>\r\n          ) : (\r\n            <div>\r\n                <h2>%{parseInt(response?.priceChangePercent)}</h2>\r\n                <p>Price Change Percent</p>\r\n            </div>\r\n            )\r\n          }\r\n        </div>\r\n      );\r\n    };\r\n    \r\n\r\nexport default Percent;\r\n","import { useFetch } from \"../hooks/useFetch\";\r\n\r\nconst Price = () => {\r\n    const { response, error } = useFetch(\r\n        `https://api.binance.com/api/v3/avgPrice?symbol=BTCUSDT`\r\n      );\r\n      let dollarUSLocale = Intl.NumberFormat('en-US')\r\n      return (\r\n        <div className=\"price_button\">\r\n          {error ? (\r\n            <h2>error...</h2>\r\n          ) : (\r\n            <div>\r\n                <h2>{dollarUSLocale.format(parseInt(response?.price))}</h2>\r\n                <p>Current Average Price</p>\r\n            </div>\r\n            )\r\n          }\r\n        </div>\r\n      );\r\n    };\r\n    \r\n\r\nexport default Price;\r\n","import moment from \"moment\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\n\r\nconst Time = () => {\r\n  const { response, error } = useFetch(`https://api.binance.com/api/v3/time`);\r\n  return (\r\n    <div className=\"time_button\">\r\n      {error ? (\r\n        <h2>error...</h2>\r\n      ) : (\r\n        <div>\r\n          <h2>{moment(response?.serverTime).format(\"HH:mm:ss\")}</h2>\r\n          <p>Check Server Time</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Time;\r\n","import React from \"react\";\r\nimport Percent from \"../buttons/Percent\";\r\nimport Price from \"../buttons/Price\";\r\nimport Time from \"../buttons/Time\";\r\n\r\nconst Buttons = () => {\r\n  return (\r\n    <div>\r\n      <div className='dashboard'>\r\n        <h1>Dashboard</h1>\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <Price />\r\n        <Percent />\r\n        <Time />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { getData } from \"../functions/functions\";\r\n\r\nconst Info = () => {\r\n  const [filterTerm, setFilterTerm] = useState(\"\");\r\n  const [response, setResponse] = useState([]);\r\n  const [error, setError] = useState(false);\r\n\r\n  let url = \"https://api.binance.com/api/v3/trades?symbol=BTCUSDT&limit=8\";\r\n\r\n  useEffect(() => {\r\n    getData(url)\r\n      .then((res) => {\r\n        setResponse(res.data);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n      });\r\n  }, [url]);\r\n\r\n  function handleSearch(e) {\r\n    e.preventDefault();\r\n    if (filterTerm === \"\") {\r\n      getData(url).then((res) => {\r\n        setResponse(res.data);\r\n      });\r\n    } else\r\n      setResponse(\r\n        response?.filter(\r\n          (response) => response.id.toString().indexOf(filterTerm) > -1\r\n        )\r\n      );\r\n    setFilterTerm(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {error ? (\r\n        <h2>There has been same error...</h2>\r\n      ) : (\r\n        <div className=\"info_table\">\r\n          <div className=\"filterContainer\">\r\n            <h1>Recent Trades List</h1>\r\n\r\n            <form className=\"filter_area\" onSubmit={handleSearch}>\r\n              <input\r\n                onChange={(e) => setFilterTerm(e.target.value)}\r\n                type=\"text\"\r\n                value={filterTerm}\r\n                className=\"filter_input\"\r\n              />\r\n              <button type=\"submit\" className=\"filter_button\">\r\n                Filter\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              <div className=\"tablehead\">\r\n                <p>ID</p>\r\n                <p>PRICE</p>\r\n                <p>QTY</p>\r\n                <p>QUOTEQTY</p>\r\n                <p>TIME</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"data_body\">\r\n              {response?.map((filtered, index) => (\r\n                <div key={index} className=\"data_rows\">\r\n                  <p id=\"id_data\">#{filtered.id}</p>\r\n                  <p>{parseInt(filtered.price)} $</p>\r\n                  <p>{filtered.qty}</p>\r\n                  <p>{filtered.quoteQty}</p>\r\n                  <p>{moment(filtered.time).format(\"YYYY-MM-DD HH:mm:ss\")}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","import \"./App.css\";\nimport LineChart from \"./components/Chart\";\nimport Buttons from \"./components/Buttons\";\nimport Info from \"./components/Info\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Buttons/>\n      <LineChart />\n      <Info/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}